# Variation partitioning

nutrient_SC <- read.table("~/nutrient_SC.txt",header=T,sep='\t')
nutrient_JS <- read.table("~/nutrient_JS.txt",header=T,sep='\t')
WQ_SC <- read.table("~/WQ_SC.txt",header=T,sep='\t')
WQ_JS <- read.table("~/WQ_JS.txt",header=T,sep='\t')

nutrient_SC <- nutrient_SC[-c(211,285),]
WQ_SC <- WQ_SC[-c(211,285),]
WQ_SC <- WQ_SC[,-3]
WQ_JS <- WQ_JS[,-3]
WQ_SC <- WQ_SC[,-3]
WQ_JS <- WQ_JS[,-3]

library(fmsb)
num.vars <- 7    
num.obs <- 447     
TEnvm <- as.matrix(nutrient_SC)
vif_func(in_frame=TEnvm, thresh=5, trace=T)

nutrient_VIF_SC <- as.data.frame(cbind(nutrient_SC$T.P,nutrient_SC$NH4,nutrient_SC$NO3,nutrient_SC$PO4))
nutrient_VIF_JS <- as.data.frame(cbind(nutrient_JS$T.P,nutrient_JS$NH4,nutrient_JS$NO3,nutrient_JS$PO4))

nutrient_SC_subs <- subset(nutrient_SC, select=names(c("TN","T.P","DIN","NH4","NO3","DIP","PO4")))
WQ_SC_subs <- subset(WQ_SC,select=names(c("WT","DO","TOC","pH","Cond","SS")))

part <- varpart(Genus_SC,logdischarge_SC,nutrient_SC_subs,WQ_SC_subs)

# Visualization

par(mfrow=c(1,3))
mod_SC <- varpart(Genus_SC,logdischarge_SC,nutrient_SC,WQ_SC)
plot(mod_SC,digits=2, Xnames=c("Discharge","Nutrient","WQ"),bg=c("tomato","gray","navy"))
mod_JS <- varpart(Genus_JS,logdischarge,nutrient_JS,WQ_JS)
plot(mod_JS,digits=2, Xnames=c("Discharge","Nutrient","WQ"),bg=c("tomato","gray","navy"))
mod_dist <- varpart(WeirDistmatrix$Distance,logdischarge,nutrient_JS,WQ_JS)
plot(mod_dist,digits=2, Xnames=c("Discharge","Nutrient","WQ"),bg=c("tomato","gray","navy"))

par(mfrow=c(1,3))
mod_SC <- varpart(Genus_SC,logdischarge_SC,nutrient_VIF_SC,WQ_SC)
plot(mod_SC,digits=2, Xnames=c("Discharge","Nutrient","WQ"),bg=c("tomato","gray","navy"))
mod_JS <- varpart(Genus_JS,logdischarge,nutrient_VIF_JS,WQ_JS)
plot(mod_JS,digits=2, Xnames=c("Discharge","Nutrient","WQ"),bg=c("tomato","gray","navy"))
mod_dist <- varpart(WeirDistmatrix$Distance,logdischarge,nutrient_VIF_JS,WQ_JS)
plot(mod_dist,digits=2, Xnames=c("Discharge","Nutrient","WQ"),bg=c("tomato","gray","navy"))

# vif_func
vif_func<-function(in_frame,thresh=10,trace=T,...){
  
  library(fmsb)
  
  if(any(!'data.frame' %in% class(in_frame))) in_frame<-data.frame(in_frame)
  
  #get initial vif value for all comparisons of variables
  vif_init<-NULL
  var_names <- names(in_frame)
  for(val in var_names){
    regressors <- var_names[-which(var_names == val)]
    form <- paste(regressors, collapse = '+')
    form_in <- formula(paste(val, '~', form))
    vif_init<-rbind(vif_init, c(val, VIF(lm(form_in, data = in_frame, ...))))
  }
  vif_max<-max(as.numeric(vif_init[,2]), na.rm = TRUE)
  
  if(vif_max < thresh){
    if(trace==T){ #print output of each iteration
      prmatrix(vif_init,collab=c('var','vif'),rowlab=rep('',nrow(vif_init)),quote=F)
      cat('\n')
      cat(paste('All variables have VIF < ', thresh,', max VIF ',round(vif_max,2), sep=''),'\n\n')
    }
    return(var_names)
  }
  else{
    
    in_dat<-in_frame
    
    #backwards selection of explanatory variables, stops when all VIF values are below 'thresh'
    while(vif_max >= thresh){
      
      vif_vals<-NULL
      var_names <- names(in_dat)
      
      for(val in var_names){
        regressors <- var_names[-which(var_names == val)]
        form <- paste(regressors, collapse = '+')
        form_in <- formula(paste(val, '~', form))
        vif_add<-VIF(lm(form_in, data = in_dat, ...))
        vif_vals<-rbind(vif_vals,c(val,vif_add))
      }
      max_row<-which(vif_vals[,2] == max(as.numeric(vif_vals[,2]), na.rm = TRUE))[1]
      
      vif_max<-as.numeric(vif_vals[max_row,2])
      
      if(vif_max<thresh) break
      
      if(trace==T){ #print output of each iteration
        prmatrix(vif_vals,collab=c('var','vif'),rowlab=rep('',nrow(vif_vals)),quote=F)
        cat('\n')
        cat('removed: ',vif_vals[max_row,1],vif_max,'\n\n')
        flush.console()
      }
      
      in_dat<-in_dat[,!names(in_dat) %in% vif_vals[max_row,1]]
      
    }
    
    return(names(in_dat))
    
  }
  
}
